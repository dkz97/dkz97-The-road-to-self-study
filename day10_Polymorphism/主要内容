1.多态





一.多态
    基本概念:
        例如小明是一个对象，但是他即可以是人，也可以是学生，这就是多态性，一个对象可以有多种形态

    格式:
        父类名称 对象名 = new 子类名称()
        接口名称 对象名 = new 实例类名称()
        父类引用指向子类对象，这样创建的只能访问父类的有的对象，但是执行的话会执行子类的对象

    多态中的成员变量:
        等号左边是谁，变量就用谁的

    多态中的成员方法:
        创建的对象是哪个类的，就执行哪个类的成员方法，看new的是谁，就优先用谁，但是编译的话只能看左边的

    成员变量: 编译看左边，执行看左边 （编译的时候访问左边的，执行的时候也是访问左边的)
    成员方法: 编译看左边，执行看右边  (编译的时候访问左边的，执行的时候是访问右边的)

    向上转型:
        格式 父类名称 对象名 = new 子类名称()    相当于把子类当成父类来看，但是使用的还是子类方法

    向下转型:
        格式 子类名称 子类对象名称 = (子类名称) 父类对象名称
        将向上转型的对象，【还原】回本来的子类对象，然后就可以访问子类的方法了
        注意事项:
        1.比如一只猫向上转型为动物，想要向下转型的时候，必须转型为猫，不能转其他
        2.如果向下转型的不是原类型，则会报错
        3.可以用instanceof关键字进行判断， 父类对象 instanceof 子类对象，返回boolean类型
