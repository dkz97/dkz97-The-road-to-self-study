主要内容:
1. 数据类型转换
2. ASCII码表和UNICODE表: 想要查看字符的ASCII编号可以直接把字符转换成Int类型就行，或者进行运算+0
3. 运算符和表达式:




数据类型转换:
    自动转换(隐式):
        1.特点: 在赋值的过程中java内部自己会转换，并且赋值的值的数据范围需要小于转换的数据类型，比如int --> float可以
        2.格式: 范围大的数据类型 变量名称 = 范围小的数据值
                float num1 = 10  //这个可以
                int num1 = 10.0F //范围大不可以自动转成范围小的

    强制转换(显式):
        1.特点: 可以把数据范围大的数据类型转换成范围小的数据类型
        2.格式: 范围小的数据类型 变量名称 = (范围小的数据类型) 范围大的值

        注意事项:
        1. 强制类型转换一般不推荐使用，因为会出现数据溢出和精度损失
        2. byte/char/short三种类型都可以发生数学运算
        3. 上面三种类型发生数学运算的时候是变成int类型然后再计算的
        4. boolean不能进行数学运算


运算符和表达式:
     1.四则运算和取模运算符: +  -  *  /(取商)  %(取模运算)

     2.自增自减运算符: ++  --
        注意事项: ++在前面的话是先加后用，++在后面的话是先用后加，--也是同类情况
       【++在前面】 先加然后再用，拿着结果进行使用
       【++在后面】 先用然后再加，先用完再最后再计算结果

     赋值运算符: =  +=  -=  *=  /=  %=   (a+= 1相当于 a = a + 1)


     比较运算符: ==  <  >  <=  >=  !=  输出的都是true值和false值

     逻辑运算符: 与 &&(并联)    或 ||(串联)    非 !(取反)
        注意: 短路的效果: 如果左边可以判断得到最终结果，则右边的代码不会执行
                在运算当中也是，如果左边已经可以算出整个式子的最终结果。右边的代码就算有算法也不会执行
        1. 逻辑运算只会存在于boolean值
        2. 与、或运算的话左右两边都需要有式子或者boolean值，但是取反运算的话一个值就行了
        3. 与、或运算可以有多少条件，如 条件A && 条件B || 条件C
            多语句判断的时候，比如 3 > x > 1 需要写成 (3 > x && x > 1)


     三元运算符: 数据类型 变量名称 = 条件判断 ? 表达式A : 表达式B

        一元运算: 一个数据就可以进行运算的，如 取反!、自增++、自减--
        二元运算: 两个数据才可以进行操作的运算符，如 加法、 赋值也是
        三元运算: 三个数据才可以进行的运算符

            int max = a > b ? a : b
            整个流程就是，定义int类型的max
            如果 a > b 这个条件判断为true的话，就把 a 表达式赋值给max
            如果 a > b 这个条件判断为false的话，就把 b 表达式赋值给maxa

        注意: 1. 表达式A和表达式B必须要符合前面定义的数据类型
             2. 三元运算符的结果必须要被使用
