面向对象的三大特征: 封装性、继承性、多态性

继承
一.特点:
1.子类可以继承父类的"内容"(可继承的属性和方法)
2.子类还可以有自己专属的内容

定义的格式:

public class 子类名称 extends 父类名称 {
        //....
    }

二.子类和父类重名时的访问特点:

1.成员变量: 子类访问的就使用子类的成员变量，如果没有就向上找，父类访问的就用父类的成员变量
    在方法中如果要访问变量:
    局部变量: 直接在方法内写变量名
    成员变量: 在变量名称左边加一个this.
    父类变量: 在变量名称左边加一个super.

2.成员方法: 子类对象访问的就用就用子类的成员方法，父类对象访问就用父类的成员方法


三.继承方法中的覆盖重写:
1.重写: 父类和子类的方法都有一个同名称的，重写就是在子类中，对父类的同名称，同参数的方法进行方法体的代码重写
    注意事项:
        1.子类的重写方法，返回值的范围需要比父类的方法范围值要小或者等于
        2.子类的重写方法的权限范围要比父类的方法范围值要大或者等于
        3.如果写重写方法，最好在重写方法上面加一个@Override
        4.就算重写也可以用    super.父类的变量或者方法   来继续使用父类的变量或者方法
2.重载: 重载就是方法名称相同，但是列表不同的，可以用同一个方法名称访问不同的方法体代码。


四.继承中的构造方法
1. 创造子类对象的时候，如果没有说明父类构造方法的调用，则会自动生成父类构造方法的无参调用，并且先执行父类的构造方法
2. 创造子类对象会默认赠送"super()" 来使用父类的构造方法
3. super的父类构造方法调用必须是子类构造方法的第一个语句，并且一个子类不能多次调用super构造
4. 子类的构造方法创建必须先调用父类的构造方法，可以自己写，不写的话会自动赠送。一个构造方法只可以有一个父类的构造方法


五.继承中的super和this关键字
super关键字的三个用法:/
    1. 在子类的成员方法中，可以访问父类的成员变量
    2. 在子类的成员方法中，可以访问父类的成员方法
    3. 在子类的构造方法中，可以访问父类的构造方法

this关键字的三个用法
    1. 在本类的成员方法中，可以访问本类的成员变量
    2. 在本类的成员方法中，可以访问另一个本类的成员方法
    3. 在本类的构造方法中可以访问另一个本类的构造方法
        A.this() 调用也是唯一一个并且也是要是构造方法内的第一行
        B.所以this() 和super()不能一起用

java的继承是单继承，可以多级继承，一个父类可以有多个子类