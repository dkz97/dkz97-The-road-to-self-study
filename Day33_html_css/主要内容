1.web
2.html
3.css




一.Web
    web概念:
        使用java语言开发基于互联网的项目
    软件架构:
        1.C/S: Client/Server 客户端/服务端
            需要下载客户端才能使用服务器端
            优点:
                1.用户体验好
            缺点:
                1.开发,安装,部署,维护 麻烦
        2.B/S: Browser/Server 浏览器/服务端
            只需要浏览器，用户可以通过不同的URL来访问不同的服务器端的程序
            优点:
                1.开发,安装,部署,维护 简单
            缺点:
                1.如果应用过大，用户体验会受到影响
                2.对服务器的硬件要求过高

    B/S架构的详细讲解:
        资源分类:
            1.静态资源:
                使用静态网页开发技术发布的资源
                特点:
                    a.所有用户访问的结果都是一样的
                    b.如文本，图片，视频 HTML,CSS JavaScript
                    c.服务器会直接将静态资源发送给浏览器，浏览器内置解释引擎会展示静态资源
            2.动态资源:
                使用动态网页及时发布的资源
                特点：
                    a.每个用户访问的结果都有可能不一样
                    b.如:jsp/servlet,php,asp...
                    c.如果用户访问动态资源，则浏览器先转换成静态资源然后再展示静态资源

        静态资源:
            HTML:用户搭建基础网页，展示页面的内容
            CSS:美化页面，布局页面
            JavaScript:控制页面元素，让页面有动态效果


二.HTML
    1.概念: 最基础的网页开发语言
        Hyper Text Markup Language 超文本标记语言
        超文本:
            用超链接的方式，将各个不同空间的文件组织在一起的网状文本
        标记语言:
            由标签构成的语言.<标签名称> 如<html> <xml>
            标记语言不是编程语言

    2.快速入门
        1.html文件的后缀名 .html或者.htm 都一样

        2.标签的分类
            1.围堵标签:有开始标签和结束标签。  如<html> </html>
            2.自闭合标签: 开始和结束就一个一起的 如<br />

        3.标签可以嵌套:
            嵌套需要正确的嵌套格式
            <a><b></b></a>

        4.在开始标签中可以定义属性，属性是由键值对构成，需要用引号引起来
        5.html的标签不区分大小写，但是建议用小写

    3.标签的学习
        1.文件标签:
            构成html文件的最基本标签
            a. html: html文件的根标签
            b. head: 头标签，用于指定html文件的一些属性，或者引入外部资源
            c. title: 标题标签
            d. body: 体标签
            e. <!DOCTYPE html>: 定义该文档是html文档

        2.文本标签: 和文本有关的标签
            注释: <!-- 注释内容 -->
            <h1> ~ <h6> : 用来定义标题的，字体大小逐渐递减
            <p>: 段落标签
            <br>: 换行自闭合标签
            <hr>: 展示一条水平线，基本属性有 color,width,size,align(对齐方式)
            <b>: 字体加粗
            <i>: 字体斜体
            <font>: 字体标签(已经落后)
            <center>: 文本居中
            属性的定义:
                color:  可以用英文单词，也可以用rbg(值1,值2,值3) 取值范围为0~255,也可以用#值1值2值3，取值范围为00~FF
                width: width='xx'数值单位默认为px像素，也可以为 % ，就是占屏幕的百分比

        3.图片标签:定义图片的标签
            <img src="相对路径" align="对齐方式" alt="图片的标题" width='' height=''>

        4.列表标签:定义列表的
            有序列表为: ol,然后列表的选项用 <li>列表选项</li> 来框起来，默认序号为1,2,3，也可以设置
            无序列表为: ul,然后列表的选项用 <li>列表选项</li> 来框起来，默认前面是实心圆点

        5.链接标签: 定义一个超链接的
            <a href="指定访问资源的URL" target=指定打开资源的方式> xxx </a>
            target:
                _self: 默认值，在当前页面打开
                _blank: 在新的空白页面打开

        6.div和span: 主要和css联用
            div:每一个div占满一整行，块级标签
            span: 文本信息在一行展示，行内标签，内联标签

        7.语义化标签: 为了提高程序可读性定义的标签
            <header> </header> 页眉
            <footer> </footer> 页脚

        8.表格标签:
            <table> 定义表格
                属性:
                    width:宽度
                    border:边框
                    cellpadding: 定义内容和单元格之间的距离
                    cellspacing: 定义单元格之间的距离
                    bgcolor: 背景颜色
                    align: 对齐方式
            <tr> 定义行
                bgcolor: 背景颜色
                align: 对齐方式
            <td> 定义单元格
                rowspan: 合并行
                colspan: 合并列
            <th> 定义表头单元格
            <caption> 表格的标题
            <thead> 表格的头部分
            <tbody> 表格的身体部分
            <tfoot> 表格的脚部分

        9.表单标签:
            概念: 用来采集用户输入的数据，用于和服务器进行交互
            <form>: 定义表单的， 可以表单的范围，就是采集用户数据的范围

                属性:
                    action: 指定提交数据的URL
                    method:指定提交方式
                        分类: 一共7种，有2种比较常用
                            get: 请求的参数会在地址栏中显示，会封装到请求行中，参数大小有限制，不太安全
                            post: 请求的参数不再地址栏显示，封装到请求行中，参数大小没限制，比较安全
                    表单中如果数据想要被提交，必须定义 name属性

            <input> : 可以通过改变type属性，来改变元素展示的样式
                type属性:
                    text: 文本输入框，默认值， 添加placeholder:可以指定提示信息，输入框内容发生变化的时候提示信息就消除

                    password: 密码输入框，会不显示

                    radio: 单选框
                        注意:
                            1.如果要让单选框实现单选效果，要多个单选框的name属性值一样
                            2.要给每一个单选框提供value值，这样选中后才会提交指定的值
                            3.checked属性，可以指定默认勾选此选项
                    checkbox: 多选框
                        注意:
                            1.也要给value值
                            2.checked也是可以提供默认值

                    label:  在属性中for指定id属性值，在浏览器点击那个文字的时候会让input输入框获得焦点

                    select: 下拉列表
                        <option> 列表项 </option>

                    textarea: 文本域
                        就是一个文本框
                        cols: 指定列数
                        rows: 指定行数


三.CSS
    概念:
        Cascading Style Sheets 层叠样式表
            层叠: 多个样式可以作用在同一个html元素中，同时生效

    好处:
        1.功能强大
        2.将内容展示和内容的样式控制分开

    css的使用:css和html结合方式
    1.内联样式
        在html的标签内定义style属性 指定css代码
        如: <div style="color:read;">hello</div> 不建议使用

    2.内部样式
        在head标签内 定义style标签，style标签的内容就是css代码
        <style>
            div {}
        </style>

    3.外部样式
        1.定义css资源文件
        2.在head标签内，定义link标签,引入外部的资源文件
            <link rel="stylesheet" href="相对路径">
            或者<style>
                @import "文件路径";
                </style>

    4.css的语法
        格式:
            选择器{
                属性名1:属性值1;
                属性名2:属性值2;
                ...
            }
        选择器: 筛选具有相似特征的元素

    5.选择器
        1.基础选择器
            id选择器: 选择具体的id属性值的元素，建议在html中，id值唯一
                如定义了id="abcd"
                语法: #abcd{定义属性}

            元素选择器: 选择具有相同标签名称的元素
                语法: 标签名称{}

            类选择器: 选择具有相同class属性值的元素
                如定义了 class="acc"
                语法: .acc{}

        2.扩展选择器
            选择所有元素:
                语法: *{}

            并集选择器:
                选择器1,选择器2{}
                筛选选择器1和选择器2的并集元素

            子选择器:
                选择器1 选择器2{}
                    筛选选择器1中的选择器2的元素

            父选择器:
                选择器1 > 选择器2{}
                    筛选选择器2外的选择器1的元素

            属性选择器:
                元素名称[属性名="属性值"]{}
                    选择元素名称，属性名=属性值的元素

            伪类选择器: 根据元素的状态选择
                语法 元素:状态{}
                    如 <a> 超链接标签
                    状态: link:初始化状态
                          visited: 被访问过的状态
                          active: 正在访问的状态
                          hover:鼠标悬浮状态

    6.属性
        1.字体文本的属性
            font-size: 字体的大小
            color: 文本的颜色
            text-align: 文本对齐方式
            line-height: 行高
        2.背景
            background:
        3.边框
            border: 设置边框，符合属性 solider(实线)
        4.尺寸
            width:宽度
            height:高度
        5.盒子模型
            margin: 外边距
            padding: 内边距
                默认情况下 内边距会影响盒子大小
                box-sizing: border-box 设置盒子的属性，让width和height就是最终盒子的大小

            float:浮动
                left: 往左
                right:往右