1.面向过程和面向对象的区别:
2.面向对象特征:封装、继承、多态
3.类的基本概念和调用
4.定义类和创建对象的内存关系
5.类作为方法的参数和方法的返回值
6.成员变量和局部变量
7.类的封装性和 private关键字
8.this关键字
9.构造方法的概念和创造
10.定义一个完整的类




一.面向过程和面向对象的区别:
    面向过程: 实现一个功能的时候，每个步骤都想到，详细处理每一个细节
    面向对象: 当需要实现一个功能的时候，不关心具体步骤，而是找一个已经有这个步骤的人，帮我来弄 好比如调用库调用类什么的


二.类的基本概念和调用
    定义一个类，要有类的属性还有类的行为，相当于写一张车图纸，车的基本属性和车的基本行为是什么。

    java的类当中
    成员变量(属性) : 事物的状态信息
        成员变量是写在成员方法外面
    成员方法(行为) : 事物的能做什么
        成员方法不用写static关键字

    类如何调用:
    类的调用
    1.导包: 导入所需的类
        若在同一个包内，则可以直接省略语句不写
        若不不在一个包内，格式为:
            import 包名称.类名称;
    2.创建对象
        类名称 对象名称 = new 类名称();
    3.使用
        成员属性的使用方法
        1. 对象名称.成员属性名
        2. 修改的话也就直接 对象名称.成员属性名 = 对应数据类型的值
        成员方法的使用方法
        1. 对象名称.成员方法名


三.定义类和创建对象的内存关系
    方法区: 存类的名称，以及被导入类的成员方法
    栈(Stack) : 当使用main()放的时候，就开始堆栈
    堆(Heap) : new创建的新对象会在new开辟一个空间，并且存放成员变量，和存放成员方法在方法区的内存地址


四.类作为方法的参数和方法的返回值
    类可以作为方法的参数和返回值，但是参数和返回值都是地址
    例 Student类
    作为参数的时候:
        public static void XXX(Student xxx)
    作为返回值
        public Static Student xxx() {
            Student stu = new Student();
            return stu;
        }


五.成员变量和局部变量
    局部变量和成员变量的区别:
    1.定义的位置不一样
        成员变量: 定义的位置在类外面
        局部变量: 定义的位置在方法内

    2.作用范围不一样
        成员变量: 作用范围是整个类，方法内外都可以用
        局部变量: 作用的范围只是在方法内，在方法外就无关

    3.默认值不一样
        成员变量: 定义的时候自带默认值，规则和数组一样
        局部变量: 定义的时候不会带默认值

    4.内存位置不一样
        成员变量: 内存在堆中
        局部变量: 内存在栈中

    5.生命周期不一样
        成员变量: 对象创建就会产生，根据java垃圾回收机构来消失
        局部变量: 方法运行进栈的时候开始，方法运行完毕就会出栈消失



六.类的封装性和 private关键字
    封装性在java中的体现
    1. 方法就是一种封装
    2. 关键字private可以进行封装

    private(私有属性)
        在定义属性前面加一个 private就对属性进行封装
        只能在本类中调用，在其他地方不能直接调用，所以需要用到Getter和Setter方法
        在Setter中 不能有返回值，参数必须和变量类型相同
        在Getter中，不能有参数，返回值和变量类型相同

        注意: 基本数据类型的 boolean是 setXxx和isXxx

七.this关键字
    当方法中，局部变量和成员变量重名的时候，可以使用
    this.成员变量名     这个就是说明this.后面的变量使用的是成员变量
    "this"相当于python中的self

八.构造方法:
    构造方法就是相当于python中的__init__
    用new来创建对象就是调用构造方法。

    格式:
    public 类名(参数类型 参数名称) {
        方法体
    }
    如果不写构造方法，java编译器会自动生成一个空的构造方法

    注意事项:
    1.构造方法必须和所在类的名称一模一样
    2.构造方法没有返回值，也没有void
    3.如果不写构造方法，java编译器会自动生成一个空的构造方法
    4.一旦自己写了一个构造方法，java就不会再送一个构造方法
    5.构造方法也是一样可以进行重载

九.定义一个完整的类
    一个完整的类需要有以下东西
    1. 所有的成员变量都需要有 private关键字进行封装
    2. 为每一个成员变量都写一个 Getter/Setter方法
    3. 需要创建一个无参的构造方法
    4. 需要创建一个全参的构造方法