1. 顺序结构
2. 选择结构(if判断语句、switch语句)
3. 循环结构(for、while、do-while)
4. 循环语句的区别
5. 循环控制语句(break 和continue)



一.顺序结构
    最简单的结构，从上往下走


二.选择结构
1. 标准if else语句
    if (条件判断) {
        语句体;
    } else {
        语句体;
    }

2. 扩展 if else语句
    if (条件判断1) {
        执行语句1;
    } else if (条件判断2) {
        执行语句2;
    } else if (条件判断3) {
        执行语句3;
    }
    ······
    } else if (条件判断n) {
        执行语句n
    } else {
        执行语句
    }

只有在前面的条件不满足的情况下才会执行后面的情况



4. switch语句

    switch (表达式) {
        case (常量1):
            语句体;
            break;
        case (常量2):
            语句体;
            break;
        ······
        case (常量n):
            语句体;
            break;
        default:
            语句体;
            break;
    }

    switch注意事项:
        1.case的数值常量不能相同
        2.switch 小括号里面的表达式只能是以下的数据类型
            基本数据类型:char/short/byte/int
            引用数据类型:String(字符串)/ enum(枚举)
        3.case没有顺序，switch里面的case想怎么放就怎么放，break可以省略
        "在switch中，匹配到哪一个case就从哪一个位置向下执行，直到遇到break就会省略"


三.循环结构
    四个部分:
    1. 初始化语句:在循环开始之前执行的语句，并且只做唯一一次
    2. 判断语句:如果条件成立则继续进行循环，如果条件不成立则退出循环
    3. 循环体:循环一直要做的事情
    4. 步进语句:就是每次循环结束之后都会执行一次的语句

1. for循环
    基本格式:
        for (初始化表达式1; 布尔表达式2; 步进表达式4) {
            循环体3
        }

    整体流程:
        1234，234，234···，直到2为false的时候就结束

2.while循环

    基本格式:
        while (条件判断) {
            循环体;
        }

    扩展格式:
        初始化语句;
        while (条件判断) {
            循环体;
            步进语句;
        }

3. do-while循环

    基本格式:
        do {
            循环体
        } while (条件判断);
    整体流程:
        先执行do里面的大括号内的循环体一次，然后再去看判断while是否成立，成立的话继续执行do，不成立就结束

    扩展格式:
        初始化语句;
        do {
            循环体
            步进语句;
        } while(条件判断);



四.循环语句的区别
    1.for循环和while循环当条件一开始就不满足的时候，一次都不会执行，但是do-while循环的话会先执行一次
    2.for循环小括号内定义的变量在外面不能使用，while和do-while循环定义的变量在外面可以使用

五.循环控制语句
    break: 一旦执行立刻结束整个循环
    continue: 一旦执行结束本次循环进行下次循环



