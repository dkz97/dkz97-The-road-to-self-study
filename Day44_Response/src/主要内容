1.Response
2.ServletContext






一.Response: 服务端给客户端发送消息的就叫响应

    响应消息:
        响应行:
            1.组成:
                协议/版本 响应状态码 状态码的描述
            2.响应状态码: 服务器告诉浏览器本次的请求，和响应的状态
                1.状态码都是三位数
                2.分类:
                    1xx: 服务器已经接收到客户端的信息，但是在等待状态中，需要客户端继续操作，没有接收完成
                    2xx: 成功， 代表的状态码  (200)
                    3xx: 重定向， 代表的状态码 (302)重定向  (304)访问缓存
                    4xx: 客户端错误.  (404)请求路径没有资源    (405)请求的方式没有对应的doxxx方法
                    5xx: 服务端错误，就是服务端内部运行错误

        响应头:
            1.格式:
                响应头名称:响应值
            2.常见的响应头
                1.Content-type: 服务器告诉客户端本次响应的数据MIME格式和编码格式
                2.Content-disposition: 告诉客户端应该用什么方式来处理这个响应
                    in-line: 默认值，当前页面打开
                    attachment;filename="文件名称"， 意思就是以附件形式打开响应体，常用于文件下载
        响应空行:
            就是一空行，分割响应头和响应体

        响应体:
            给客户端发送的东西


    Response对象:
        功能:
            1.设置响应消息
                设置响应行: 响应行主要设置的都是响应码
                    setStatus(int sc)

                设置响应头:
                    setHeader(String name, String value)

                设置响应体:
                    步骤:
                        1.获取字节输出流或者字符输出流
                            字符输出流: PrintWriter getWriter()

                            字节输出流: ServletOutputStream getOutputStream()

                        2.使用输出流来设置响应体


    重定向案例:
        重定向就是资源跳转的方式, 告诉客户端，这件事我做不了，你找别的路径
        步骤:
            1.先设置消息行的响应码为 302
            2.设置响应头 location
            3.方法 sendRedirect("url") 重定向的地址

        重定向(Redirect)特点:
            1.浏览器地址会变化
            2.客户端做的事情
            3.两次请求，数据不能共享
            4.可以重定向其他网站地址也行

        转发(forward)特点:
            1.浏览器地址不会变化
            2.在服务端内做的事情
            3.一次请求，数据可以共享
            4.只能转发内部服务器的地址

        路径的分类及写法:
            1.相对路径: 通过相对路径不可以获得唯一资源
                如: ./demo01
                不以 / 为开头，以 . 为开头

                规则:找到当前资源和目标资源的路径相对位置关系
                    ./ 为当前目录
                    ../为上一级目录

            2.绝对路径:
                如 http://localhost:8080/day44/demo01    绝对路径就是 /day44/demo01
                以 / 为开头
                规则: 判断定义的路径是给谁用的
                    如果是给客户端用的，就需要加上虚拟目录 /day44/demo01
                        可以用方法 request.getContextPath() 来获取虚拟目录
                        如: <a> <form> 重定向 都需要加上虚拟目录

                    如果是给服务器用的就不用加虚拟目录    /demo01
                        如 转发路径


    服务器输出字符数据到客户端的案例:
        步骤:
            获取字符输出流
            写入数据，输出数据

        解决乱码的问题:
            1. 设置流的默认编码
            2. 告诉浏览器响应体使用的编码
                或者直接用方法 response.setContentType("text/html;charset=utf-8")



    验证码案例， 到时候直接上网搜
    	1. 本质：图片
    	2. 目的：防止恶意表单注册


二.ServletContext对象:
    1.概念: 代表整个web项目的对象， 可以和容器(服务器)来通信

    2.获取:
        request.getServletContext();    通过request对象获取
        this.getServletContext();   通过HttpServlet对象获取

    3.功能:
        1.获取MIME类型:
            MIME类型: 就是text/html image/jpeg 这种类型， 大格式/小格式这样的
            获取方法: String getMimeType(String file) 传入的是文件的名称

        2.域对象:共享数据
            1. setAttribute(String name,Object value)
            2. getAttribute(String name)
            3. removeAttribute(String name)

            ServletContext对象范围：所有用户所有请求的数据,因为是整个web项目的，所以域对象是整个web项目

        3.获取文件的真实(服务器)路径
            String getRealPath(String path) 传入的数据是资源访问的路径，通过资源访问的路径可以获取真是路径

    文件下载案例：
        主要是让图片也能点击然后出现下载页面而已，浏览器会自动把图片和视频都会对超链接进行点击下载，但是图片可以解析的话就会直接显示出来
        所以就利用一个servlet类，来让图片实现下载，主要是把文件放入到内存，内存就根据流响应回浏览器而已，当然途中还要有找到图片的真实路径什么的

        对于文件如果是中文名称
        1.获取客户端的版本信息
        2.根据不一样的版本信息来进行不一样的响应，响应的文件名称格式修改
        可以上网下一个工具类来使用